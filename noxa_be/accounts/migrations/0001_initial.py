# Generated by Django 5.0.3 on 2024-09-30 11:01

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('tutor', 'Tutor'), ('parent', 'Parent')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentname', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('birthdate', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('post_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(choices=[('math', 'Math'), ('literature', 'Literature'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('english', 'English'), ('history', 'History'), ('geography', 'Geography'), ('economy', 'Economy'), ('computer_science', 'Computer Science'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('closed', 'Closed')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('grade', models.IntegerField()),
                ('background_desired', models.CharField(choices=[('high_school_diploma', 'High School Diploma'), ('bachelor_degree', 'Bachelor Degree'), ('bachelor_degree_engineering', 'Bachelor Degree in Engineering'), ('master_degree', 'Master Degree'), ('doctorate_degree', 'Doctorate Degree')], max_length=255)),
                ('duration', models.FloatField()),
                ('session_per_week', models.IntegerField()),
                ('wage_per_hour', models.FloatField()),
                ('student_number', models.IntegerField()),
                ('address', models.TextField()),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.parentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TutorClasses',
            fields=[
                ('class_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('finished', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.jobpost')),
            ],
        ),
        migrations.CreateModel(
            name='ClassTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_start', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.jobpost')),
                ('class_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorclasses')),
            ],
        ),
        migrations.CreateModel(
            name='TutorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tutorname', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('birthdate', models.DateField()),
                ('bio_link', models.URLField()),
                ('phone_number', models.CharField(max_length=15)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=50)),
                ('educational_background', models.CharField(choices=[('high_school_diploma', 'High School Diploma'), ('bachelor_degree', 'Bachelor Degree'), ('bachelor_degree_engineering', 'Bachelor Degree in Engineering'), ('master_degree', 'Master Degree'), ('doctorate_degree', 'Doctorate Degree')], max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tutorclasses',
            name='tutor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorprofile'),
        ),
        migrations.CreateModel(
            name='JobRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.jobpost')),
                ('tutor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.FloatField()),
                ('description', models.TextField()),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.parentprofile')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorclasses')),
                ('tutor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('certificate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('evidence_link', models.URLField()),
                ('tutor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='TutorSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('math', 'Math'), ('literature', 'Literature'), ('physics', 'Physics'), ('chemistry', 'Chemistry'), ('biology', 'Biology'), ('english', 'English'), ('history', 'History'), ('geography', 'Geography'), ('economy', 'Economy'), ('computer_science', 'Computer Science'), ('other', 'Other')], max_length=50)),
                ('tutor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tutorprofile')),
            ],
        ),
    ]
